2025-09-02 08:16:44.049 +03:00 [WRN] (Thread ) |Microsoft.EntityFrameworkCore.Model.Validation| 
 The entity type 'Address' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2025-09-02 08:16:46.015 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (75ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-02 08:16:46.719 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-02 08:17:01.805 +03:00 [INF] (Thread ) |Serilog.AspNetCore.RequestLoggingMiddleware| 
 HTTP GET / responded 404 in 4.9071 ms
2025-09-02 08:17:20.262 +03:00 [WRN] (Thread ) |LuckyPennySoftware.MediatR.License| 
 You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-02 08:17:55.159 +03:00 [INF] (Thread ) |Serilog.AspNetCore.RequestLoggingMiddleware| 
 HTTP PUT /weatherforecast responded 400 in 35303.3485 ms
2025-09-02 08:19:50.055 +03:00 [WRN] (Thread ) |Microsoft.EntityFrameworkCore.Model.Validation| 
 The entity type 'Address' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2025-09-02 08:19:50.992 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (59ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-09-02 08:19:51.497 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (153ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-09-02 08:19:53.994 +03:00 [INF] (Thread ) |Serilog.AspNetCore.RequestLoggingMiddleware| 
 HTTP GET / responded 404 in 2.5791 ms
2025-09-02 08:20:18.272 +03:00 [WRN] (Thread ) |LuckyPennySoftware.MediatR.License| 
 You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-09-02 08:20:36.278 +03:00 [INF] (Thread ) |Serilog.AspNetCore.RequestLoggingMiddleware| 
 HTTP PUT /weatherforecast responded 400 in 18624.2908 ms
2025-09-02 08:21:28.374 +03:00 [INF] (Thread ) |Restaurant.Controllers.WeatherForecastController| 
 Starting to fetch restaurants...
2025-09-02 08:21:41.922 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (4,209ms) [Parameters=[@__Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [r0].[Id], [r0].[Category], [r0].[ContactEmail], [r0].[ContactNumber], [r0].[CreatedAt], [r0].[Description], [r0].[HasDelivery], [r0].[Name], [r0].[address_City], [r0].[address_PostalCode], [r0].[address_Street], [d].[Id], [d].[Description], [d].[Name], [d].[Price], [d].[RestaurantId]
FROM (
    SELECT TOP(1) [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[CreatedAt], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[address_City], [r].[address_PostalCode], [r].[address_Street]
    FROM [Restaurants] AS [r]
    WHERE [r].[Id] = @__Id_0
) AS [r0]
LEFT JOIN [Dishes] AS [d] ON [r0].[Id] = [d].[RestaurantId]
ORDER BY [r0].[Id]
2025-09-02 08:21:42.197 +03:00 [INF] (Thread ) |Microsoft.EntityFrameworkCore.Database.Command| 
 Executed DbCommand (46ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (Size = 4000), @p1='?' (Size = 4000), @p2='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Restaurants] SET [address_City] = @p0, [address_PostalCode] = @p1, [address_Street] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2025-09-02 08:21:47.524 +03:00 [INF] (Thread ) |Serilog.AspNetCore.RequestLoggingMiddleware| 
 HTTP PUT /weatherforecast responded 201 in 46136.2176 ms
